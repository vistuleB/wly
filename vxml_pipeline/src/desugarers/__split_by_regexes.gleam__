import gleam/option.{Some}
import gleam/regexp.{type Regexp}
import gleam/string.{inspect as ins}
import infrastructure.{type Desugarer, type Desugarer, Desugarer} as infra

type Extras =
  #(List(#(Regexp, String)), List(String))

fn nodemap_factory(extras: Extras) -> infra.FancyOneToManyNodeMap {
  let #(regexes_and_tags, forbidden_parents) = extras
  infra.replace_regexes_by_tags_param_transform(_, regexes_and_tags)
  |> n2t.prevent_one_to_many_nodemap_inside(forbidden_parents)
}

fn desugarer_factory(extras: Extras) -> Desugarer {
  n2t.fancy_one_to_many_nodemap_2_desugarer_transform(nodemap_factory(extras))
}

pub fn split_by_regexes(extras: Extras) -> Desugarer {
  Desugarer(
    description: DesugarerDescription(
      "split_by_regexes",
      Some(ins(extras)),
      "...",
    ),
    desugarer: desugarer_factory(extras),
  )
}
